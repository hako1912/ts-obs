{"version":3,"sources":["funciton\\part.ts","funciton\\curry.ts","beans\\ValueObject.ts","funciton\\eq.ts","funciton\\getProperties.ts","funciton\\not.ts","funciton\\mixin.ts","funciton\\Predicates.ts","di\\Dependencies.ts","beans\\CustomMap.ts","beans\\ObservableValue.ts","beans\\ObservableList.ts","beans\\binding\\IndexedList.ts","domain\\Repository.ts","domain\\Entity.ts","domain\\EntityKey.ts","domain\\SurrogateKey.ts","domain\\SurrogateKeyRepository.ts","domain\\SurrogateKeyEntity.ts","beans\\binding\\LeftJoinedList.ts","beans\\binding\\FilteredList.ts","beans\\binding\\ValueBinding.ts","index.ts"],"names":[],"mappings":"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","file":"index.map","sourceRoot":"..\\src\\main","sourcesContent":["export default function part<T, U, R>(func: (a1: T, a2: U) => R, arg: T) {\r\n    return (v2: U) => func(arg, v2)\r\n}","export default function curry<T, U, R>(func: (a1: T, a2: U) => R) {\r\n    return (v1: T) => (v2: U) => func(v1, v2)\r\n}","export default abstract class ValueObject {\r\n    abstract eq(val: this): boolean\r\n\r\n    not(val: this): boolean {\r\n        return !this.eq(val)\r\n    }\r\n}\r\n\r\n","import ValueObject from \"../beans/ValueObject\";\r\n\r\nexport default function eq<T>(val1: T, val2: T): boolean {\r\n    if (val1 instanceof ValueObject && val2 instanceof ValueObject) {\r\n        return val1.eq(val2)\r\n    }\r\n    return val1 == null ? val2 == null : val1 === val2\r\n}","// これでもいけそう\r\n// https://stackoverflow.com/questions/30158515/list-down-all-prototype-properties-of-an-javascript-object\r\nexport default function getProperties(obj: any, properties: string[] = []): string[] {\r\n    if (obj.__proto__ != null) {\r\n        return getProperties(obj.__proto__, Object.getOwnPropertyNames(obj)).concat(properties)\r\n    }\r\n    return properties\r\n}","import eq from \"./eq\";\r\n\r\nexport default function not<T>(val1: T, val2: T): boolean {\r\n    return !eq(val1, val2)\r\n}","import getProperties from \"./getProperties\";\r\n\r\nexport default function mixin<T, U>(first: T, second: U): T & U {\r\n    let result = <T & U>{};\r\n    // 名前が被るプロパティ、関数はfirstで上書きされる\r\n    for (let id of getProperties(first)) {\r\n        (<any>result)[id] = (<any>first)[id];\r\n    }\r\n    for (let id of getProperties(second)) {\r\n        if (!result.hasOwnProperty(id)) {\r\n            (<any>result)[id] = (<any>second)[id];\r\n        }\r\n    }\r\n    return result;\r\n}","import {Predicate} from \"../types\";\r\n\r\n\r\nexport default class Predicates {\r\n    private constructor() {\r\n    }\r\n\r\n    static get always(): Predicate<any> {\r\n        return it => true\r\n    }\r\n\r\n    static get never(): Predicate<any> {\r\n        return it => false\r\n    }\r\n\r\n    static negate<T>(pred: Predicate<T>): Predicate<T> {\r\n        return it => !pred(it)\r\n    }\r\n}","import {Class} from \"../types\";\r\n\r\n\r\nexport default class Dependencies {\r\n\r\n    static container: Map<Class<any>, any> = new Map()\r\n\r\n    static inject<T>(clazz: Class<T>): T {\r\n        const instance = Dependencies.container.get(clazz)\r\n        if (instance) {\r\n            return instance\r\n        }\r\n        const newInstance = new clazz()\r\n        Dependencies.container.set(clazz, newInstance)\r\n        return newInstance\r\n    }\r\n}\r\n","import not from \"../funciton/not\";\r\nimport eq from \"../funciton/eq\";\r\n\r\nexport class CustomMap<K, V> {\r\n    private entries: CustomMap.Entry<K, V>[] = []\r\n\r\n    get values(): V[] {\r\n        return this.entries.map(it => it.value)\r\n    }\r\n\r\n    get keys(): K[] {\r\n        return this.entries.map(it => it.key)\r\n    }\r\n\r\n    put(key: K, value: V): void {\r\n        let current = this.findEntry(key)\r\n        if (current) {\r\n            this.update(key, value)\r\n        } else {\r\n            this.entries.push(new CustomMap.Entry(key, value))\r\n        }\r\n    }\r\n\r\n    remove(key: K): boolean {\r\n        const beforeSize = this.entries.length\r\n        console.log(`key=${key}`)\r\n        this.entries = this.entries.filter(it => not(it.key, key))\r\n        return this.entries.length < beforeSize\r\n    }\r\n\r\n    update(key: K, value: V): void {\r\n        if (!this.remove(key)) {\r\n            throw new Error('entry remove failed')\r\n        }\r\n        this.entries.push(new CustomMap.Entry(key, value))\r\n    }\r\n\r\n    clear(): void {\r\n        this.entries = []\r\n    }\r\n\r\n    forEach(func: (value: V, key: K) => void): void {\r\n        this.entries.forEach(it => func(it.value, it.key))\r\n    }\r\n\r\n    has(key: K): boolean {\r\n        return this.find(key) ? true : false\r\n    }\r\n\r\n    find(key: K): V | undefined {\r\n        const entry = this.findEntry(key)\r\n        return entry == null ? undefined : entry.value\r\n    }\r\n\r\n    private findEntry(key: K): CustomMap.Entry<K, V> | undefined {\r\n        return this.entries.find(it => eq(it.key, key))\r\n    }\r\n\r\n}\r\n\r\nexport namespace CustomMap {\r\n    export class Entry<K, V> {\r\n        constructor(private _key: K, private _value: V) {\r\n        }\r\n\r\n        get key(): K {\r\n            return this._key;\r\n        }\r\n\r\n        get value(): V {\r\n            return this._value;\r\n        }\r\n    }\r\n}","import {ValueChangeListener} from \"../types\";\r\n\r\nexport default class ObservableValue<T> {\r\n    protected listeners: ValueChangeListener<T>[] = []\r\n\r\n    constructor(private _val: T) {\r\n    }\r\n\r\n    get value(): T {\r\n        return this._val\r\n    }\r\n\r\n    set value(value: T) {\r\n        if (this.val == value) {\r\n            return\r\n        }\r\n        const old = this.val\r\n        this._val = value\r\n        this.listeners.forEach(lis => lis(value, old))\r\n    }\r\n\r\n    // @deprecated\r\n    get val(): T {\r\n        return this._val\r\n    }\r\n\r\n    set val(value: T) {\r\n        if (this.val == value) {\r\n            return\r\n        }\r\n        const old = this.val\r\n        this._val = value\r\n        this.listeners.forEach(lis => lis(value, old))\r\n    }\r\n\r\n    public addListener(listener: ValueChangeListener<T>): void {\r\n        this.listeners.push(listener)\r\n    }\r\n\r\n    public removeListener(listener: ValueChangeListener<T>): void {\r\n        this.listeners = this.listeners.filter(it => listener === it)\r\n    }\r\n}","import {ArrayChangeListener, ValueChangeListener} from \"../types\";\r\nimport ObservableValue from \"./ObservableValue\";\r\n\r\n// 保持するObservableValueはサブクラスのみ参照可にする\r\nexport default class ObservableList<T> {\r\n\r\n    onElementChangeObj: ValueChangeListener<T> = this.onElementChange.bind(this)\r\n    protected arrayListeners: ArrayChangeListener<T>[] = []\r\n    protected elementListeners: ValueChangeListener<T>[] = []\r\n\r\n    constructor(protected _obsValues: ObservableValue<T>[] = []) {\r\n        this._obsValues.forEach(obs => {\r\n            obs.addListener(this.onElementChangeObj)\r\n        })\r\n    }\r\n\r\n    get values(): T[] {\r\n        return this._obsValues.map(it => it.value)\r\n    }\r\n\r\n    // @deprecated\r\n    get val(): ObservableValue<T>[] {\r\n        return this._obsValues\r\n    }\r\n\r\n    set val(value: ObservableValue<T>[]) {\r\n        this._obsValues = value\r\n    }\r\n\r\n    public addElementListener(listener: ValueChangeListener<T>) {\r\n        this.elementListeners.push(listener)\r\n    }\r\n\r\n    public addArrayListener(listener: ArrayChangeListener<T>) {\r\n        this.arrayListeners.push(listener)\r\n    }\r\n\r\n    public removeArrayListener(listener: ArrayChangeListener<T>) {\r\n        this.arrayListeners = this.arrayListeners.filter(it => listener !== it)\r\n    }\r\n\r\n    public removeElementListener(listener: ValueChangeListener<T>) {\r\n        this.elementListeners = this.elementListeners.filter(it => listener !== it)\r\n    }\r\n\r\n    public push(...values: T[]): ObservableValue<T>[] {\r\n        if (values.length === 0) {\r\n            return []\r\n        }\r\n        const appends = values.map(it => new ObservableValue(it))\r\n        this._obsValues.push(...appends)\r\n        this.arrayListeners.forEach(lis => lis(values, []))\r\n        appends.forEach(it => it.addListener(this.onElementChangeObj))\r\n        return appends\r\n    }\r\n\r\n    public remove(...values: T[]) {\r\n        // const obsValues = values.map(it => new ObservableValue(it))\r\n        // obsValues.forEach(it => it.removeListener(this.onElementChangeObj))\r\n\r\n        const removes: T[] = []\r\n        this._obsValues = this._obsValues.filter(it => {\r\n            if (values.indexOf(it.val) === -1) {\r\n                return true\r\n            }\r\n            removes.push(it.val)\r\n            return false\r\n        })\r\n        if (0 < removes.length) {\r\n            this.arrayListeners.forEach(lis => lis([], removes))\r\n        }\r\n    }\r\n\r\n\r\n    public removeIf(predicate: (val: T) => boolean): number {\r\n        const preLength = this.values.length\r\n        const removes = this.values.filter(it => predicate(it))\r\n        this.remove(...removes)\r\n        // 削除した件数を返す\r\n        return this.values.length - preLength\r\n    }\r\n\r\n    public clear(): void {\r\n        if (this._obsValues.length === 0) {\r\n            return\r\n        }\r\n        const oldVal = this.values\r\n        this._obsValues = []\r\n        this.arrayListeners.forEach(lis => lis([], oldVal))\r\n    }\r\n\r\n    public isEmpty(): boolean {\r\n        return this._obsValues.length === 0\r\n    }\r\n\r\n    public isNotEmpty(): boolean {\r\n        return !this.isEmpty()\r\n    }\r\n\r\n    public map<R>(func: (val: T) => R): R[] {\r\n        return this.values.map(func)\r\n    }\r\n\r\n    public filter(func: (val: T) => boolean): T[] {\r\n        return this.values.filter(func)\r\n    }\r\n\r\n    public find(func: (val: T) => boolean): T | undefined {\r\n        return this.values.find(func)\r\n    }\r\n\r\n    public forEach(func: (val: T) => void): void {\r\n        this.values.forEach(func)\r\n    }\r\n\r\n    private onElementChange(val: T, oldVal: T) {\r\n        this.elementListeners.forEach(it => it(val, oldVal))\r\n    }\r\n    \r\n}","import {CustomMap} from './../CustomMap';\r\nimport ObservableList from \"../ObservableList\";\r\nimport ObservableValue from \"../ObservableValue\";\r\n\r\n\r\n// K: $key\r\n// V: value\r\nexport default class IndexedList<K, T> extends ObservableList<T> {\r\n\r\n    constructor(private _keySupplier: (val: T) => K) {\r\n        super()\r\n    }\r\n\r\n\r\n    private _keyValueMap = new CustomMap<K, T>()\r\n\r\n    get keyValueMap(): CustomMap<K, T> {\r\n        return this._keyValueMap;\r\n    }\r\n\r\n    get keySupplier(): (val: T) => K {\r\n        return this._keySupplier;\r\n    }\r\n\r\n    public push(...values: T[]): ObservableValue<T>[] {\r\n        // validate duplicate $key\r\n        const keyValues = values.map(it => {\r\n            const key = this._keySupplier(it)\r\n            if (!key) {\r\n                throw new Error('キーが取得できない。')\r\n            }\r\n            return {\r\n                key: this._keySupplier(it),\r\n                val: it\r\n            }\r\n        })\r\n        const errors = keyValues.map(it => it.key).filter(it => this._keyValueMap.has(it))\r\n        if (0 < errors.length) {\r\n            throw new Error(`duplicated keys: ${errors}`)\r\n        }\r\n\r\n        keyValues.forEach(it => this._keyValueMap.put(it.key, it.val))\r\n        return super.push(...values)\r\n    }\r\n\r\n\r\n    remove(...values: T[]): void {\r\n        values.map(it => this._keySupplier(it)).forEach(it => this._keyValueMap.remove(it))\r\n        super.remove(...values);\r\n    }\r\n\r\n    clear(): void {\r\n        this._keyValueMap.clear()\r\n        super.clear();\r\n    }\r\n}","import EntityKey from \"./EntityKey\";\r\nimport Entity from \"./Entity\";\r\nimport IndexedList from \"../beans/binding/IndexedList\";\r\nimport eq from \"../funciton/eq\";\r\n\r\nexport default abstract class Repository<K extends EntityKey, E extends Entity<K>> {\r\n\r\n    protected _store = new IndexedList<K, E>(it => it.$key)\r\n\r\n    get store(): IndexedList<K, E> {\r\n        return this._store\r\n    }\r\n\r\n    preInsert(entity: E) {\r\n        // noop\r\n    }\r\n\r\n    insert(val: E): void {\r\n        // サブクラスで登録前に処理を挟む場合ここで\r\n        this.preInsert(val)\r\n        console.log(`insert: val=${JSON.stringify(val)}`)\r\n\r\n\r\n        if (this.has(val.$key)) {\r\n            // すでに存在するキーに対して挿入しようとした場合\r\n            throw Error(`key of ${val.$key} is already exists`)\r\n        }\r\n        // $key validation\r\n        if (val.$key == null) {\r\n            throw Error('undefined $key')\r\n        }\r\n        this.store.push(val)\r\n    }\r\n\r\n    preUpdate(newVal: E, key: K) {\r\n        // noop\r\n    }\r\n\r\n    update(newVal: E, key: K) {\r\n        // サブクラスで登録前に処理を挟む場合ここで\r\n        this.preUpdate(newVal, key)\r\n        console.log(`update: key=${JSON.stringify(key)}, newVal=${JSON.stringify(newVal)}`)\r\n\r\n        if (!this.has(key)) {\r\n            // 旧値が存在しない場合\r\n            throw Error(`key of ${key} is no value present`)\r\n        }\r\n        if (this.deleteBy(key) === 0) {\r\n            throw Error('cant delete before update')\r\n        }\r\n        this.insert(newVal)\r\n    }\r\n\r\n    deleteBy(key: K): number {\r\n        console.log(`deleteBy: key=${JSON.stringify(key)}`)\r\n        return this.store.removeIf(it => eq(it.$key, key))\r\n    }\r\n\r\n    size(): number {\r\n        return this.store.val.length\r\n    }\r\n\r\n    findBy(key: K): E {\r\n        console.log(`findBy: key=${JSON.stringify(key)}`)\r\n        const val = this.store.find(it => eq(it.$key, key))\r\n        if (val == null) {\r\n            throw Error(`no value present. key=${JSON.stringify(key)}`)\r\n        }\r\n        return val\r\n    }\r\n\r\n    has(key: K): boolean {\r\n        const find = this.store.find(it => it.$key.eq(key))\r\n        return find != null\r\n    }\r\n}","import EntityKey from \"./EntityKey\";\r\nimport ValueObject from \"../beans/ValueObject\";\r\n\r\nexport default abstract class Entity<K extends EntityKey> extends ValueObject {\r\n    abstract get $key(): K\r\n\r\n    eq(val: this): boolean {\r\n        return this.$key.eq(val.$key);\r\n    }\r\n}\r\n\r\n\r\n\r\n","import ValueObject from \"../beans/ValueObject\";\r\n\r\n\r\nexport default abstract class EntityKey extends ValueObject{\r\n}\r\n\r\n\r\n","import EntityKey from \"./EntityKey\";\r\n\r\nexport default class SurrogateKey extends EntityKey {\r\n    constructor(private id: number) {\r\n        super()\r\n    }\r\n\r\n    eq(val: this): boolean {\r\n        return this.id === val.id;\r\n    }\r\n}","import Repository from \"./Repository\";\r\nimport SurrogateKeyEntity from \"./SurrogateKeyEntity\";\r\nimport SurrogateKey from \"./SurrogateKey\";\r\n\r\n\r\nexport default abstract class SurrogateKeyRepository<E extends SurrogateKeyEntity> extends Repository<SurrogateKey, E> {\r\n\r\n    private incremental = 0\r\n\r\n    preInsert(entity: E) {\r\n        // 連番キーを割り当てる\r\n        if (!entity.hasKey()) {\r\n            entity.assignKey(new SurrogateKey(this.incremental++))\r\n        }\r\n    }\r\n\r\n    preUpdate(newValue: E, key: SurrogateKey) {\r\n        newValue.assignKey(key)\r\n    }\r\n\r\n}","import Entity from \"./Entity\";\r\nimport SurrogateKey from \"./SurrogateKey\";\r\n\r\nexport default class SurrogateKeyEntity extends Entity<SurrogateKey> {\r\n    // 登録時に発行される\r\n    protected $id?: SurrogateKey\r\n\r\n    get $key(): SurrogateKey {\r\n        if (!this.$id) {\r\n            throw new Error('unassigned $key')\r\n        }\r\n        return this.$id;\r\n    }\r\n\r\n    public hasKey(): boolean {\r\n        return this.$id != null\r\n    }\r\n\r\n    public assignKey(key: SurrogateKey) {\r\n        if (this.hasKey()) {\r\n            throw new Error('already unassigned')\r\n        }\r\n        this.$id = key\r\n    }\r\n\r\n}","import IndexedList from \"./IndexedList\";\r\nimport mixin from \"../../funciton/mixin\";\r\nimport eq from \"../../funciton/eq\";\r\n\r\n\r\n\r\n// K: $key\r\n// P: primaryList(not null)\r\n// S: secondaryList(optional)\r\n\r\n// TODO: 要素変更の監視\r\nexport default class LeftJoinedList<K, P, S> extends IndexedList<K, P & {[E in keyof S]: E | undefined}> {\r\n    constructor(primaries: IndexedList<K, P>,\r\n                secondaries: IndexedList<K, S>,\r\n                foreignKeySupplier: (secondaryVal: S) => K = secondaries.keySupplier) {\r\n        // 2つのリストを結合した新しいリストを生成する\r\n        const initialValues: ((P & S) | P)[] = []\r\n        primaries.keyValueMap.forEach((v, k) => {\r\n            const secondary = secondaries.keyValueMap.find(k)\r\n            initialValues.push(secondary == null ? v : mixin(v, secondary))\r\n        })\r\n\r\n        // 優先要素は必ず存在するため、優先リストのキー生成器を使用する\r\n        super(it => primaries.keySupplier(it))\r\n        super.push(...initialValues as any)\r\n\r\n        // 優先リストの変更監視\r\n        primaries.addArrayListener((appends, removes) => {\r\n            // 無条件で自リストから削除する\r\n            removes.forEach(it => {\r\n                const key = primaries.keySupplier(it)\r\n                const val = this.keyValueMap.find(key)\r\n                if (val) {\r\n                    // 存在しないことはあり得ないが念のため\r\n                    this.remove(val)\r\n                } else {\r\n                    throw new Error('存在しないルート')\r\n                }\r\n            })\r\n            // サブ要素と結合し、自リストに追加する\r\n            appends.forEach(it => {\r\n                const key = primaries.keySupplier(it)\r\n                // サブ要素から、優先要素のキーを外部キーにもつ要素を探す\r\n                const secondary = secondaries.values.find(sec => eq(foreignKeySupplier(sec), key))\r\n                const current = this.keyValueMap.find(key)\r\n                if (current) {\r\n                    // 優先要素追加時は自要素が存在しないはずだからいらない気がする\r\n                    this.remove()\r\n                }\r\n                this.push(secondary == null ? it : mixin(it, secondary) as any)\r\n            })\r\n        })\r\n\r\n        // サブリストの変更監視\r\n        secondaries.addArrayListener((appends, removes) => {\r\n            // 自要素からサブ要素のみ削除する\r\n            removes.forEach(it => {\r\n                const key = foreignKeySupplier(it)\r\n                const val = this.keyValueMap.find(key)\r\n                if (val) {\r\n                    // 一度要素削除してから、優先要素のみで再度挿入する\r\n                    this.remove(val)\r\n                    this.push(primaries.keyValueMap.find(key) as any)\r\n                } // 存在しない場合＝優先要素のみ存在 or 要素なし\r\n            })\r\n\r\n            // 優先要素と結合し、自リストに追加する\r\n            // ※優先要素が存在しない場合は追加しない\r\n            appends.forEach(it => {\r\n                const key = foreignKeySupplier(it)\r\n                const primary = primaries.keyValueMap.find(key)\r\n                if (primary) {\r\n                    // すでに存在する自要素を一旦削除する\r\n                    if (this.keyValueMap.has(key)) {\r\n                        this.remove(this.keyValueMap.find(key) as any)\r\n                    }\r\n                    // 優先要素が存在する場合のみpushする\r\n                    this.push(mixin(primary, it) as any)\r\n                }\r\n            })\r\n\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\n","import ObservableList from \"../ObservableList\";\r\nimport ObservableValue from \"../ObservableValue\";\r\n\r\nexport default class FilteredList<T>  extends ObservableList<T>{\r\n    public constructor(\r\n        private obs: ObservableList<T>,\r\n        private pred: (val: T) => boolean) {\r\n        super()\r\n        this._obsValues.push(...obs.filter(it => pred(it)).map(it => new ObservableValue(it)))\r\n        obs.addArrayListener((appends, removes) => {\r\n            this._obsValues = this._obsValues.filter(it => removes.indexOf(it.val))\r\n            this._obsValues.push(...appends.filter(it => this.pred(it)).map(it => new ObservableValue(it)))\r\n        })\r\n    }\r\n}","import ObservableValue from \"../ObservableValue\";\r\n\r\nexport default class ValueBinding<T, U = T> {\r\n  constructor(\r\n    private obs: ObservableValue<T>,\r\n    private mapper: (val: T) => U,\r\n  ) {\r\n    this.val = new ObservableValue(mapper(obs.val))\r\n    obs.addListener((val, oldVal) => {\r\n      this.val.val = this.mapper(val)\r\n    })\r\n  }\r\n\r\n  private val: ObservableValue<U>\r\n}","import { Class, Flatten, ArrayChangeListener, Predicate, ValueChangeListener } from './types'\r\n// function\r\nimport part from './funciton/part'\r\nimport curry from './funciton/curry'\r\nimport eq from './funciton/eq'\r\nimport getProperties from './funciton/getProperties'\r\nimport not from './funciton/not'\r\nimport mixin from './funciton/mixin'\r\nimport Predicates from './funciton/Predicates'\r\n// DI\r\nimport Dependencies from './di/Dependencies'\r\n// domain\r\nimport Repository from './domain/Repository'\r\nimport Entity from './domain/Entity'\r\nimport SurrogateKey from './domain/SurrogateKey'\r\nimport SurrogateKeyRepository from './domain/SurrogateKeyRepository'\r\nimport SurrogateKeyEntity from './domain/SurrogateKeyEntity'\r\n// beans\r\nimport LeftJoinedList from './beans/binding/LeftJoinedList'\r\nimport { CustomMap } from './beans/CustomMap'\r\nimport IndexedList from './beans/binding/IndexedList'\r\nimport ValueObject from './beans/ValueObject'\r\nimport ObservableList from './beans/ObservableList'\r\nimport ObservableValue from './beans/ObservableValue'\r\nimport FilteredList from './beans/binding/FilteredList'\r\nimport ValueBinding from './beans/binding/ValueBinding'\r\n\r\nexport {\r\n    Class,\r\n    Flatten,\r\n    ArrayChangeListener,\r\n    Predicate,\r\n    ValueChangeListener,\r\n    part,\r\n    curry,\r\n    eq,\r\n    getProperties,\r\n    not,\r\n    mixin,\r\n    Predicates,\r\n    Dependencies,\r\n    Repository,\r\n    Entity,\r\n    SurrogateKey,\r\n    SurrogateKeyRepository,\r\n    SurrogateKeyEntity,\r\n    LeftJoinedList,\r\n    CustomMap,\r\n    IndexedList,\r\n    ValueObject,\r\n    ObservableList,\r\n    ObservableValue,\r\n    FilteredList,\r\n    ValueBinding,\r\n}"]}